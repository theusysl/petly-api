generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relacionamentos
  pets             Pet[]             @relation("UserPets")
  adoptionRequests AdoptionRequest[]
  reports          Report[]
  events           Event[]           @relation("UserEvents")
}

model Pet {
  id          Int       @id @default(autoincrement())
  name        String
  species     String
  breed       String?
  age         Int?
  description String?
  status      PetStatus @default(AVAILABLE)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  ownerId Int
  owner   User @relation("UserPets", fields: [ownerId], references: [id], onDelete: Cascade)

  adoptionRequests AdoptionRequest[]
}

model AdoptionRequest {
  id        Int           @id @default(autoincrement())
  status    RequestStatus @default(PENDING)
  createdAt DateTime      @default(now())

  userId Int
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)

  petId Int
  pet   Pet @relation(fields: [petId], references: [id], onDelete: Cascade)
}

model Event {
  id        Int      @id @default(autoincrement())
  title     String
  date      DateTime
  location  String
  details   String?
  createdAt DateTime @default(now())

  organizerId Int
  organizer   User @relation("UserEvents", fields: [organizerId], references: [id], onDelete: Cascade)
}

model Report {
  id        Int          @id @default(autoincrement())
  type      ReportType
  details   String
  status    ReportStatus @default(OPEN)
  createdAt DateTime     @default(now())

  userId Int
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Role {
  USER
  ONG
  VET
  ADMIN
}

enum PetStatus {
  AVAILABLE
  ADOPTED
  LOST
}

enum RequestStatus {
  PENDING
  APPROVED
  REJECTED
}

enum ReportType {
  MISTREATMENT
  LOST_PET
  OTHER
}

enum ReportStatus {
  OPEN
  IN_PROGRESS
  RESOLVED
}
